{"version":3,"sources":["Services/Request.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Request","getStudents","fetch","method","then","res","json","console","log","JSON","stringify","getJournal","getMark","id","JournalTable","journal","this","props","Table","bordered","class","students","map","student","groupId","group","studyGroupId","PrIS","SII","row","studentId","studyPlanId","markId","color1","color2","count","surname","name","secondName","React","Component","App","state","activeGroup","j","setState","s","className","src","logo","alt","onClick","style","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.a5edea6e.chunk.js","sourcesContent":["const Request = {\r\n\tgetStudents() {\r\n\t\treturn fetch(\"http://localhost:8080/students/all\", {\r\n\t\t\tmethod: 'GET'\r\n\t\t}).then(res => res.json())\r\n\t\t.then(res => {\r\n\t\t  console.log('body:' + JSON.stringify(res))\r\n          return res;\r\n\t\t});\r\n\t},\r\n\tgetJournal() {\r\n\t\treturn fetch(\"http://localhost:8080/journal\", {\r\n\t\t\tmethod: 'GET'\r\n\t\t}).then(res => res.json())\r\n\t\t.then(res => {\r\n\t\t  console.log('body:' + JSON.stringify(res))\r\n          return res;\r\n\t\t});\r\n\t},\r\n\tgetMark(id) {\r\n\t\treturn fetch(\"http://localhost:8080/marks/\" + id, {\r\n\t\t\tmethod: 'GET'\r\n\t\t}).then(res => res.json())\r\n\t\t.then(res => {\r\n\t\t  console.log('body:' + JSON.stringify(res))\r\n          return res;\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default Request\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Navbar, Nav, Dropdown, Tabs, Table, Tab} from \"react-bootstrap\";\nimport Request from \"./Services/Request\";\n\nclass JournalTable extends React.Component {\n\trender() {\n\t\tlet journal = this.props.journal;\n\t\treturn (\n\t\t\t<Table bordered>\n\t\t\t\t<thead class=\"text-white\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th>ФИО</th>\n\t\t\t\t\t\t<th>ПрИС</th>\n\t\t\t\t\t\t<th>СИИ</th>\n\t\t\t\t\t\t<th>Пересдачи</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody class=\"text-white\">\n\t\t\t\t{this.props.students.map((student) => {\n\t\t\t\t\tvar groupId = this.props.group;\n\t\t\t\t\tif (student.studyGroupId != groupId)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tvar PrIS;\n\t\t\t\t\tvar SII;\n\t\t\t\t\tjournal.map(row => {\n\t\t\t\t\t\tif (row.studentId != student.id)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\telse if (row.studyPlanId == 1)\n\t\t\t\t\t\t\tPrIS = 6 - row.markId;\n\t\t\t\t\t\telse if (row.studyPlanId == 2)\n\t\t\t\t\t\t\tSII = 6 - row.markId;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t\t\tvar color1 = PrIS < 3 ? \"text-danger\" : \"\";\n\t\t\t\t\tvar color2 = SII < 3 ? \"text-danger\" : \"\";\n\t\t\t\t\tvar count = PrIS < 3 ? 1 : 0;\n\t\t\t\t\tif(SII < 3) count++;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>{student.id}</th>\n\t\t\t\t\t\t\t<th>{student.surname + \" \" + student.name + \" \" + student.secondName}</th>\n\t\t\t\t\t\t\t<th class={color1}>{PrIS}</th>\n\t\t\t\t\t\t\t<th class={color2}>{SII}</th>\n\t\t\t\t\t\t\t<th>{count}</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)}\n\t\t\t\t)}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t)\n\t}\n}\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tactiveGroup: 1,\n\t\t\tstudents: null,\n\t\t\tjournal: null\n\t\t};\n\t}\n\t/*students = [\n\t\t[\n\t\t\t{name: 'Иванов Иван Иванович', markPrIS: 5, markSII: 4},\n\t\t\t{name: 'Петров Пётр Петрович', markPrIS: 3, markSII: 2}\n\t\t],\n\t\t[\n\t\t\t{name: 'Валиева Лидия Павловна', markPrIS: 3, markSII: 5},\n\t\t\t{name: 'Илюшин Игорь Витальевич', markPrIS: 5, markSII: 5}\n\t\t],\n\t\t[\n\t\t\t{name: 'Голутвин Семён Юрьевич', markPrIS: 4, markSII: 2},\n\t\t\t{name: 'Сёмина Анна Николаевна', markPrIS: 3, markSII: 5}\n\t\t]\n\t];*/\n\n\tcomponentDidMount() {\n\t\tRequest.getJournal().then(j => this.setState({journal: j}));\n\t\tRequest.getStudents().then(s => this.setState({students: s}));\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<br/><br/>\n\t\t\t\t<div>\n\t\t\t\t{this.state.students\n\t\t\t\t? <JournalTable\n\t\t\t\t\tstudents = {this.state.students}\n\t\t\t\t\tgroup = {this.state.activeGroup}\n\t\t\t\t\tjournal = {this.state.journal}/>\n\t\t\t\t: null }\n\t\t\t\t\t<button onClick={() => {this.setState({activeGroup: 1});}}>\n\t\t\t\t\t\tИКБО-03-16\n\t\t\t\t\t</button>\n\t\t\t\t\t<button style={{marginLeft: 10}} onClick={() => {this.setState({activeGroup: 66});}}>\n\t\t\t\t\t\tИКБО-02-16\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}